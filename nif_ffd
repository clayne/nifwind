/**** BEGIN LICENSE BLOCK ****

BSD 3-Clause License

Copyright (c) 2023, the wind.
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.

3. Neither the name of the copyright holder nor the names of its
   contributors may be used to endorse or promote products derived from
   this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

**** END LICENCE BLOCK ****/

// Highlighter: C#

// Describe a .nif. This is the common ground from which the different variants
// shall be formed.

// Origin: "nif.xml" checkout f265c56482c728c6877e45d5b5993d3bff83670a at
//         https://github.com/niftools/nifxml.git
//
// Later modifications are ineligible and plain wrong IMHO. You could create
// independent projects for each one of the new versions you're interested in.

// Machine types ...............................................................

type uint 4
//TODO this is used at 3 places at Header for no apparent reason;
//     the endianess is a parameter: truth table:
// machine | file_data
// --------|----------
//       1 |         0
//       1 |         1
//       0 |         0
//       0 |         1
type ulittle32 uint
type int -4
type short -2
type ushort 2
type byte 1
type char byte
type bool byte (Version > 0x04010001)
type bool int  (Version <= 0x04010001)
type float .4 //TODO implement me
// "The upper bit appears to be a flag used for PhysX block types."?
type BlockTypeIndex ushort
type FileVersion uint // each byte is a number: 0x0a010203 = "10.1.2.3"
type Flags ushort // bit-flags
type Ptr int // -ptr
type Ref int // +ptr
type StringPalletteOffset uint // StringOffset
type HeaderStringIndex uint // StringIndex

// enum ........................................................................

enum TextureAlphaFormat uint
    NONE    0 //
    BINARY  1 // Mask
    SMOOTH  2 // Blend
    DEFAULT 3

enum TextureApplyMode uint
    REPLACE  0 // GL_REPLACE
    DECAL    1 // GL_DECAL
    MODULATE 2 // GL_MODULATE
    HILIGHT  3 // "PS2 Only. Function Unknown."
    HILIGHT2 4 // "Parallax Flag in some Oblivion meshes."

// const ......................................................................

const NIF_HEADER_STRING_1 "NetImmerse File Format" (Version <= 0x0a000100)
const NIF_HEADER_STRING_2 "Gamebryo File Format" (Version >= 0x0a010000)

// struct ......................................................................

// "A variable length string that ends with a newline character (0x0A)."
struct HeaderString
    char Chars[-10] //TODO implement me: read until char[i] == 10

LineString HeaderString //TODO use one type please

